import {
  SignX_default
} from "./chunk-WMJ53X62.js";
import "./chunk-PELSXP4R.js";
import "./chunk-KT67WVF2.js";
import "./chunk-CQW6S6VZ.js";
import "./chunk-V7QTQBGQ.js";
import "./chunk-MRKYM7RI.js";
import "./chunk-RIXFT5AQ.js";
import "./chunk-CUQFSTHV.js";
import "./chunk-ZKVY74BQ.js";
import "./chunk-ADI2EPOV.js";
import {
  check_target,
  hmr,
  legacy_api,
  legacy_rest_props,
  spread_props
} from "./chunk-HB3Y2GHA.js";
import {
  append,
  comment
} from "./chunk-6HJRDU3Y.js";
import "./chunk-U7P2NEEE.js";
import {
  FILENAME,
  HMR,
  first_child,
  mark_module_end,
  mark_module_start,
  pop,
  push,
  set
} from "./chunk-JP5C5KHO.js";
import "./chunk-SGW7LL2R.js";
import "./chunk-RVAV4ZRS.js";
import "./chunk-GR2EK3QX.js";
import "./chunk-SU4DY6DV.js";
import "./chunk-UGBVNEQM.js";

// node_modules/clerk-sveltekit/dist/client/SignIn.svelte
mark_module_start();
SignIn[FILENAME] = "node_modules/clerk-sveltekit/dist/client/SignIn.svelte";
function SignIn($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, SignIn);
  var fragment = comment();
  var node = first_child(fragment);
  SignX_default(node, spread_props({ x: "in" }, () => $$sanitized_props));
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  SignIn = hmr(SignIn, () => SignIn[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = SignIn[HMR].source;
    set(SignIn[HMR].source, module.default[HMR].original);
  });
}
var SignIn_default = SignIn;
mark_module_end(SignIn);
export {
  SignIn_default as default
};
//# sourceMappingURL=clerk-sveltekit_client_SignIn__svelte.js.map
