import {
  store_default
} from "./chunk-MRKYM7RI.js";
import {
  check_target,
  hmr,
  if_block,
  legacy_api,
  setup_stores,
  slot,
  store_get,
  validate_store
} from "./chunk-HB3Y2GHA.js";
import {
  append,
  comment
} from "./chunk-6HJRDU3Y.js";
import {
  FILENAME,
  HMR,
  first_child,
  mark_module_end,
  mark_module_start,
  pop,
  push,
  set
} from "./chunk-JP5C5KHO.js";

// node_modules/clerk-sveltekit/dist/client/ClerkLoaded.svelte
mark_module_start();
ClerkLoaded[FILENAME] = "node_modules/clerk-sveltekit/dist/client/ClerkLoaded.svelte";
function ClerkLoaded($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ClerkLoaded);
  const $$stores = setup_stores();
  const $clerk = () => (validate_store(store_default, "clerk"), store_get(store_default, "$clerk", $$stores));
  var fragment = comment();
  var node = first_child(fragment);
  {
    var consequent = ($$anchor2) => {
      var fragment_1 = comment();
      var node_1 = first_child(fragment_1);
      slot(
        node_1,
        $$props,
        "default",
        {
          get clerk() {
            return $clerk();
          }
        },
        null
      );
      append($$anchor2, fragment_1);
    };
    if_block(node, ($$render) => {
      if ($clerk()) $$render(consequent);
    });
  }
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ClerkLoaded = hmr(ClerkLoaded, () => ClerkLoaded[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = ClerkLoaded[HMR].source;
    set(ClerkLoaded[HMR].source, module.default[HMR].original);
  });
}
var ClerkLoaded_default = ClerkLoaded;
mark_module_end(ClerkLoaded);

export {
  ClerkLoaded_default
};
//# sourceMappingURL=chunk-CQW6S6VZ.js.map
