import { verifySession } from './index.js';
export default function handleClerk(secretKey, { debug = false, protectedPaths = [], signInUrl = '/sign-in', }) {
    return (async ({ event, resolve }) => {
        const sessionToken = event.cookies.get('__session');
        debug && console.log('[Clerk SvelteKit] ' + event.url.pathname);
        if (sessionToken) {
            debug && console.log('[Clerk SvelteKit] Found session token in cookies.');
            try {
                const session = await verifySession(secretKey, sessionToken);
                if (session) {
                    debug && console.log('[Clerk SvelteKit] Session verified successfully.');
                    event.locals.session = session;
                }
                else {
                    debug && console.warn('[Clerk SvelteKit] Session verification returned no session.');
                }
            }
            catch (error) {
                debug &&
                    console.log('[Clerk SvelteKit] Session verification failed.', error?.reason ?? error);
            }
        }
        else {
            debug && console.log('[Clerk SvelteKit] No session token found in cookies.');
        }
        // Protect the protected routes.
        if (!event.locals.session &&
            protectedPaths.find((path) => typeof path === 'string' ? event.url.pathname.startsWith(path) : path(event))) {
            debug && console.log('[Clerk SvelteKit] No session found, redirecting to login screen.');
            const fullSignInUrl = new URL(signInUrl, event.url.origin);
            return Response.redirect(fullSignInUrl.toString() + '?redirectUrl=' + event.url.pathname);
        }
        return resolve(event);
    });
}
