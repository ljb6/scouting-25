const COMPONENT_DEFAULTS = {
    SignIn: {},
    SignUp: {},
    UserButton: {
        showName: false,
        afterSignOutUrl: '/sign-in',
        userProfileMode: 'modal',
    },
    UserProfile: {},
    OrganizationProfile: {},
    OrganizationSwitcher: {},
    CreateOrganization: {},
};
export const clerkUI = (node, { clerk, componentType, props }) => {
    if (!props) {
        props = COMPONENT_DEFAULTS[componentType];
    }
    let currentComponentType = componentType;
    // console.log(`[ClerkUI] Initial component type: ${currentComponentType}`)
    if (clerk) {
        // console.log(`[ClerkUI] Mounting initial ${currentComponentType}`)
        clerk[`mount${currentComponentType}`](node, props);
    }
    return {
        update: ({ clerk: newClerk, componentType: newComponentType }) => {
            // console.log(`[ClerkUI] Update triggered. New component type: ${newComponentType}`)
            if (currentComponentType !== newComponentType || clerk !== newClerk) {
                // console.log(`[ClerkUI] Unmounting previous ${currentComponentType}`)
                clerk?.[`unmount${currentComponentType}`](node);
                currentComponentType = newComponentType;
                clerk = newClerk;
            }
            if (clerk) {
                // console.log(`[ClerkUI] Mounting updated ${currentComponentType}`)
                clerk[`mount${currentComponentType}`](node, props);
            }
        },
        destroy: () => {
            // console.log(`[ClerkUI] Destroy called. Unmounting ${currentComponentType}`)
            clerk?.[`unmount${currentComponentType}`](node);
        },
    };
};
export default clerkUI;
